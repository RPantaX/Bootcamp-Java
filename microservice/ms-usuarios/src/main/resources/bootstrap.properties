#PRIMERO SE EJECUTA EL BOOTSTRAP YA QUE TIENE LAS CONFIGURACIONES EXTERNAS
#APLICACIÓN CLIENTE DE SPRING CLOUD (CONFIG SERVER)

#COMUNICACION CON EL CONFIG SERVER, Y EL PUERTO
spring.cloud.config.uri=http://localhost:8888
#enpoints de administracion =* expone todos los enpoints de administracion de springboot a traves de actuator
management.endpoints.web.exposure.include=*
spring.cloud.config.profile=dev
spring.application.name=ms-usuario
server.port=0
eureka.instance.instance-id=${spring.application.name}:${random.uuid}
logging.level.root=debug

#CON ESTO LE DECIMOS AL ACTUATOR QUE UTILIZAREMOS UN BROKER DE MENSAJES QUE HARÁ LA ACTUALIZACION, SIMPLEMENTE USANDO LA DEPENDENCIA DE AMQP
#AL TENER EL ACCESO AL CONFIG SERVER, CON SOLO USAR UN ENPOINT DE UN MICROSERVICIO TODOS LOS DEMAS MICROSERVICIOS SE ACTUALIZARÁN
#PERO LA CONFIGURACION DEL HOST Y DEMAS TIENEN QUE TENERLO TODOS LOS MICROS PARA QUE PODAMOS USAR EL ENPOINT Y RABBITMQ AVISE A LOS DEMÁS SOBRE LAS ACTUALIZACIONES
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#le decimos que algunos valores los obtendrá del vaul de secretos
spring.cloud.vault.application-name=ms-usuario
spring.cloud.vault.host=localhost
spring.cloud.vault.port=8200
spring.cloud.vault.scheme=http
spring.cloud.vault.authentication=TOKEN
spring.cloud.vault.token=00000000-0000-0000-0000-000000000000


